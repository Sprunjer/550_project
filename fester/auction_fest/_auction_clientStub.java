package auction_fest;


/**
* auction_fest/_auction_clientStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from AuctionFest.idl
* Saturday, March 11, 2017 11:26:53 AM PST
*/

public class _auction_clientStub extends org.omg.CORBA.portable.ObjectImpl implements auction_fest.auction_client
{

  public boolean offer (String seller_name, String item_name, float starting_price) throws auction_fest.auction_clientPackage.OfferItemException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("offer", true);
                $out.write_string (seller_name);
                $out.write_string (item_name);
                $out.write_float (starting_price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/OfferItemException:1.0"))
                    throw auction_fest.auction_clientPackage.OfferItemExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return offer (seller_name, item_name, starting_price        );
            } finally {
                _releaseReply ($in);
            }
  } // offer

  public boolean sell (String item_name) throws auction_fest.auction_clientPackage.SellItemException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sell", true);
                $out.write_string (item_name);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/SellItemException:1.0"))
                    throw auction_fest.auction_clientPackage.SellItemExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sell (item_name        );
            } finally {
                _releaseReply ($in);
            }
  } // sell

  public boolean bid (String user_name, float bid_price) throws auction_fest.auction_clientPackage.BidItemException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bid", true);
                $out.write_string (user_name);
                $out.write_float (bid_price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/BidItemException:1.0"))
                    throw auction_fest.auction_clientPackage.BidItemExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bid (user_name, bid_price        );
            } finally {
                _releaseReply ($in);
            }
  } // bid

  public String view_high_bidder (String itemName) throws auction_fest.auction_clientPackage.SellItemException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_high_bidder", true);
                $out.write_string (itemName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/SellItemException:1.0"))
                    throw auction_fest.auction_clientPackage.SellItemExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_high_bidder (itemName        );
            } finally {
                _releaseReply ($in);
            }
  } // view_high_bidder

  public String view_bid_status (String userId) throws auction_fest.auction_clientPackage.BidItemException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_bid_status", true);
                $out.write_string (userId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/BidItemException:1.0"))
                    throw auction_fest.auction_clientPackage.BidItemExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_bid_status (userId        );
            } finally {
                _releaseReply ($in);
            }
  } // view_bid_status

  public String view_auction_status () throws auction_fest.auction_clientPackage.StatusException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_auction_status", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:auction_fest/auction_client/StatusException:1.0"))
                    throw auction_fest.auction_clientPackage.StatusExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return view_auction_status (        );
            } finally {
                _releaseReply ($in);
            }
  } // view_auction_status

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:auction_fest/auction_client:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _auction_clientStub
